const axios = require('axios');

const API_BASE = 'http://localhost:3000';

async function testPrescriptionAPI() {
  try {
    console.log('üß™ Testing Prescription API...\n');

    // Test data
    const testPrescription = {
      elderId: 1,
      prescribedBy: 1,
      diagnosis: 'C·∫£m c√∫m nh·∫π',
      notes: 'Ngh·ªâ ng∆°i, u·ªëng nhi·ªÅu n∆∞·ªõc',
      prescriptionDate: '2024-01-15',
      startDate: '2024-01-15',
      endDate: '2024-01-22',
      medications: [
        {
          name: 'Paracetamol',
          dose: '500mg',
          frequency: '3 l·∫ßn/ng√†y',
          time: '08:00 - 20:00',
          notes: 'Sau ƒÉn'
        },
        {
          name: 'Vitamin C',
          dose: '1000mg',
          frequency: '1 l·∫ßn/ng√†y',
          time: '09:00',
          notes: 'TƒÉng c∆∞·ªùng s·ª©c ƒë·ªÅ kh√°ng'
        }
      ]
    };

    // 1. Test t·∫°o ƒë∆°n thu·ªëc m·ªõi
    console.log('1. Creating new prescription...');
    const createResponse = await axios.post(`${API_BASE}/api/prescriptions`, testPrescription);
    console.log('‚úÖ Prescription created:', createResponse.data);
    const prescriptionId = createResponse.data.prescriptionId;

    // 2. Test l·∫•y t·∫•t c·∫£ ƒë∆°n thu·ªëc
    console.log('\n2. Fetching all prescriptions...');
    const getAllResponse = await axios.get(`${API_BASE}/api/prescriptions`);
    console.log('‚úÖ All prescriptions:', getAllResponse.data.length, 'items');

    // 3. Test l·∫•y ƒë∆°n thu·ªëc theo Elder ID
    console.log('\n3. Fetching prescriptions by elder...');
    const getByElderResponse = await axios.get(`${API_BASE}/api/prescriptions/elder/1`);
    console.log('‚úÖ Prescriptions for elder 1:', getByElderResponse.data.length, 'items');

    // 4. Test l·∫•y ƒë∆°n thu·ªëc theo ID
    console.log('\n4. Fetching prescription by ID...');
    const getByIdResponse = await axios.get(`${API_BASE}/api/prescriptions/${prescriptionId}`);
    console.log('‚úÖ Prescription details:', getByIdResponse.data);

    // 5. Test c·∫≠p nh·∫≠t ƒë∆°n thu·ªëc
    console.log('\n5. Updating prescription...');
    const updateData = {
      diagnosis: 'C·∫£m c√∫m nh·∫π - ƒë√£ c·∫£i thi·ªán',
      notes: 'Ti·∫øp t·ª•c ƒëi·ªÅu tr·ªã, theo d√µi tri·ªáu ch·ª©ng',
      medications: [
        {
          name: 'Paracetamol',
          dose: '500mg',
          frequency: '2 l·∫ßn/ng√†y',
          time: '08:00 - 20:00',
          notes: 'Gi·∫£m li·ªÅu'
        }
      ]
    };
    const updateResponse = await axios.put(`${API_BASE}/api/prescriptions/${prescriptionId}`, updateData);
    console.log('‚úÖ Prescription updated:', updateResponse.data);

    // 6. Test x√≥a ƒë∆°n thu·ªëc
    console.log('\n6. Deleting prescription...');
    await axios.delete(`${API_BASE}/api/prescriptions/${prescriptionId}`);
    console.log('‚úÖ Prescription deleted successfully');

    console.log('\nüéâ All tests passed!');

  } catch (error) {
    console.error('‚ùå Test failed:', error.response?.data || error.message);
  }
}

// Ch·∫°y test
testPrescriptionAPI();

